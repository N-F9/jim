make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.3
# Built for x86_64-redhat-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Fri Jun 24 11:59:56 2022

# Variables

# environment
GDK_BACKEND = x11
# environment
LC_ALL = C
# environment
NO_AT_BRIDGE = 1
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 115)
LINKER_SCRIPT = $(CEDEV_TOOLCHAIN)/meta/linker_script
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 119)
OBJDIR := obj
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 32)
LTOFLAGS = $(CFLAGS)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 188)
ICONSRC = $(call NATIVEPATH,$(OBJDIR)/icon.src)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 244)
EZLTOFLAGS = $(EZLLVMFLAGS) $(LTOFLAGS)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 98)
CONVBIN = $(call NATIVEPATH,$(BIN)/convbin)
# environment
GJS_DEBUG_OUTPUT = stderr
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 120)
BINDIR := bin
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 102)
LINK = $(call NATIVEPATH,$(BIN)/ez80-link)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 247)
FASMGFLAGS = $(FASMG_V) $(call QUOTE_ARG,$(call NATIVEPATH,$(CEDEV_TOOLCHAIN)/meta/ld.alm)) -i $(call QUOTE_ARG,DEBUG := $(LDDEBUG)) -i $(call QUOTE_ARG,HAS_PRINTF := $(LDHAS_PRINTF)) -i $(call QUOTE_ARG,HAS_LIBC := $(LDHAS_LIBC)) -i $(call QUOTE_ARG,HAS_LIBCXX := $(LDHAS_LIBCXX)) -i $(call QUOTE_ARG,PREFER_OS_CRT := $(LDPREFER_OS_CRT)) -i $(call QUOTE_ARG,PREFER_OS_LIBC := $(LDPREFER_OS_LIBC)) -i $(call QUOTE_ARG,include $(call FASMG_FILES,$(LINKER_SCRIPT))) -i $(call QUOTE_ARG,range .bss $$$(BSSHEAP_LOW) : $$$(BSSHEAP_HIGH)) -i $(call QUOTE_ARG,provide __stack = $$$(STACK_HIGH)) -i $(call QUOTE_ARG,locate .header at $$$(INIT_LOC)) $(LDMAPFLAG) -i $(call QUOTE_ARG,source $(LDICON)$(call FASMG_FILES,$(LDFILES))) -i $(call QUOTE_ARG,library $(LDLIBS)) $(EXTRA_LDFLAGS)
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-d833173b-b513-4aff-8673-e1813256487a.sock
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 212)
CONVBINFLAGS = -r -k 8xp -u -n $(NAME)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 153)
LINK_CPPSOURCES = $(call UPDIR_ADD,$(CPPSOURCES:%.$(CPP_EXTENSION)=$(OBJDIR)/%.$(CPP_EXTENSION).bc))
# environment
VSCODE_CWD = /home/nick
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 236)
LDHAS_PRINTF := 1
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 125)
TARGETMAP = $(NAME).map
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 173)
OPT_LIBLOAD := 
# environment
GDM_LANG = en_US.UTF-8
# default
MAKE_COMMAND := make
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 42)
HAS_UPPERCASE_NAME = YES
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 146)
ASMSOURCES = $(sort $(call rwildcard,$(SRCDIR),*.asm) $(EXTRA_ASM_SOURCES))
# environment
define BASH_FUNC_which%%
() {  ( alias;
 eval ${which_declare} ) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot $@
}
endef
# automatic
@D = $(patsubst %/,%,$(dir $@))
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 73)
Q = @
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
PWD = /home/nick/Documents/Github/ti-84-programs
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
HOSTNAME = parvus
# environment
MAIL = /var/spool/mail/nick
# environment
XDG_DATA_DIRS = /home/nick/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 99)
CONVIMG = $(call NATIVEPATH,$(BIN)/convimg)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 71)
V = 0
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 44)
HAS_CUSTOM_FILE = NO
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# environment
VSCODE_CODE_CACHE_PATH = /home/nick/.config/Code/CachedData/30d9c6cd9483b2cc586687151bcbcd635f373630
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 157)
DEPFILES = $(wildcard $(LINK_CSOURCES:%.bc=%.d) $(LINK_CPPSOURCES:%.bc=%.d))
# environment
LANG = C
# environment
XAUTHORITY = /run/user/1000/.mutter-Xwaylandauth.6OVJO1
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 61)
DEBUGMODE := NDEBUG
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 49)
LIBLOAD_OPTIONAL = 
# makefile
MAKEFLAGS = pqrR
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 21)
ICON = 
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 106)
QUOTE_ARG = '$(subst ','\'',$1)'
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 105)
NATIVEMKDR = mkdir -p $1
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 28)
INIT_LOC = D1A87F
# makefile
CURDIR := /home/nick/Documents/Github/ti-84-programs
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 40)
CUSTOM_FILE_FILE = stdio_file.h
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 104)
RMDIR = rm -rf $1
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
LESSOPEN = ||/usr/bin/lesspipe.sh %s
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MFLAGS = -pqrR
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# default
.SHELLFLAGS := -c
# environment
WAYLAND_DISPLAY = wayland-0
# environment
HISTSIZE = 1000
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 189)
ICON_CONV = $(CONVIMG) --icon-output $(call QUOTE_ARG,$(ICONSRC)) --icon-format asm --icon-description $(DESCRIPTION)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 227)
LDPREFER_OS_LIBC := 1
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 124)
TARGETBIN = $(NAME).bin
# environment
XDG_SESSION_DESKTOP = gnome
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 216)
LDMAPFLAG := -i map
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 1)
MAKEFILE_LIST := makefile /home/nick/CEdev/meta/makefile.mk
# automatic
@F = $(notdir $@)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 25)
BSSHEAP_LOW = D052C6
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 138)
EXTRA_HEADERS = $(EXTRA_USERHEADERS)
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 190)
LDICON = $(call FASMG_FILES,$(ICONSRC))$(comma)$(space)
# environment
VSCODE_PID = 19595
# environment
XDG_SESSION_TYPE = wayland
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 243)
EZCXXFLAGS = $(EZCOMMONFLAGS) -isystem $(call NATIVEPATH,$(CEDEV_TOOLCHAIN)/include/c++) -fno-exceptions -fno-use-cxa-atexit $(CXXFLAGS)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 52)
CEDEV_TOOLCHAIN = $(shell cedev-config --prefix)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 156)
LDFILES = $(LDCRT0) $(LDLTO) $(LINK_ASMSOURCES)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 145)
CPPSOURCES = $(sort $(call rwildcard,$(SRCDIR),*.$(CPP_EXTENSION)) $(EXTRA_CXX_SOURCES))
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 242)
EZCFLAGS = $(EZCOMMONFLAGS) $(CFLAGS)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 110)
UPDIR_ADD = $(subst ../,_../,$(subst \,/,$1))
# environment
SESSION_MANAGER = local/unix:@/tmp/.ICE-unix/2778,unix/unix:/tmp/.ICE-unix/2778
# automatic
*F = $(notdir $*)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 152)
LINK_CSOURCES = $(call UPDIR_ADD,$(CSOURCES:%.$(C_EXTENSION)=$(OBJDIR)/%.$(C_EXTENSION).bc))
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 45)
HAS_LIBC = YES
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 140)
EXTRA_CXX_SOURCES = $(EXTRA_CPPSOURCES)
# makefile (from 'makefile', line 6)
DESCRIPTION = "JIM"
# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 62)
CCDEBUG := -g0
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# default
MAKE_HOST := x86_64-redhat-linux-gnu
# makefile
SHELL = /bin/sh
# default
MAKECMDGOALS := all
# environment
XMODIFIERS = @im=ibus
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 113)
FASMG_LIB = $(patsubst %,"%",$(subst ",\",$(subst \,\\,$(call NATIVEPATH,$1))))
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# environment
SHLVL = 0
# environment
MAKELEVEL := 0
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 109)
MKDIR = $(call NATIVEMKDR,$(call QUOTE_ARG,$(call NATIVEPATH,$1)))
# default
MAKE = $(MAKE_COMMAND)
# makefile (from 'makefile', line 8)
ARCHIVED = YES
# environment
PATH = /home/nick/CEdev/bin:/home/nick/CEdev/bin:/home/nick/.local/bin:/home/nick/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/var/lib/snapd/snap/bin:/home/nick/.spicetify:/home/nick/.spicetify
# default
MAKEFILES := 
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 46)
HAS_LIBCXX = YES
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 50)
COMPRESSED_MODE = zx7
# automatic
^F = $(notdir $^)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 139)
EXTRA_C_SOURCES = $(EXTRA_CSOURCES)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 171)
REQ_LIBLOAD := "/home/nick/CEdev/lib/libload/fileioc.lib" "/home/nick/CEdev/lib/libload/fontlibc.lib" "/home/nick/CEdev/lib/libload/graphx.lib" "/home/nick/CEdev/lib/libload/keypadc.lib"
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 175)
LDLIBS := "/home/nick/CEdev/lib/libload/fileioc.lib", "/home/nick/CEdev/lib/libload/fontlibc.lib", "/home/nick/CEdev/lib/libload/graphx.lib", "/home/nick/CEdev/lib/libload/keypadc.lib"
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 27)
STACK_HIGH = D1A87E
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 58)
comma := ,
# environment
INVOCATION_ID = 644f3ca8f68e4ab7ac64bc326c280724
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 127)
ICONIMG := 
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 97)
FASMG = $(call NATIVEPATH,$(BIN)/fasmg)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 154)
LINK_ASMSOURCES = $(ASMSOURCES)
# environment
VSCODE_LOG_NATIVE = false
# environment
USERNAME = nick
# environment
GNOME_SETUP_DISPLAY = :1
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 26)
BSSHEAP_HIGH = D13FD8
# automatic
?F = $(notdir $?)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 111)
UPDIR_RM = $(subst _../,../,$(subst \,/,$1))
# makefile (from 'makefile', line 5)
NAME = JIM
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 74)
FASMG_V := -n
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 114)
FASMG_FILES = $(subst $(space),$(comma) ,$(patsubst %,"%",$(subst ",\",$(subst \,\\,$(call NATIVEPATH,$1)))))
# environment
 
XDG_CURRENT_DESKTOP = GNOME
# automatic
+F = $(notdir $+)
# environment
DESKTOP_SESSION = gnome
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = GNOME
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 39)
C_EXTENSION = c
# environment
LOGNAME = nick
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 56)
empty := 
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/code.desktop
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 38)
CPP_EXTENSION = cpp
# makefile
.DEFAULT_GOAL := all
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 57)
space := $(subst ,, )
# environment
SYSTEMD_EXEC_PID = 2833
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 103)
RM = rm -f $1
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 144)
CSOURCES = $(sort $(call rwildcard,$(SRCDIR),*.$(C_EXTENSION)) $(EXTRA_C_SOURCES))
# environment
HISTCONTROL = ignoredups
# environment
EDITOR = /usr/bin/nano
# environment
DISPLAY = :0
# environment
USER = nick
# default
MAKE_VERSION := 4.3
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 121)
GFXDIR := src/gfx
# 'override' directive
.SHELLSTATUS := 0
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 126)
TARGET8XP = $(NAME).8xp
# environment
MANAGERPID = 2586
# environment
which_declare = declare -f
# environment
DEBUGINFOD_URLS = https://debuginfod.fedoraproject.org/ 
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 19595
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 141)
EXTRA_ASM_SOURCES = $(EXTRA_ASMSOURCES)
# environment
_ = /usr/bin/make
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 80)
BIN = $(CEDEV_TOOLCHAIN)/bin
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'makefile', line 10)
CFLAGS = -Wall -Wextra -Oz
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 168)
LIBLOAD_LIBS := /home/nick/CEdev/lib/libload/fileioc.lib /home/nick/CEdev/lib/libload/fontlibc.lib /home/nick/CEdev/lib/libload/graphx.lib /home/nick/CEdev/lib/libload/keypadc.lib
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 43)
HAS_PRINTF = YES
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 29)
OUTPUT_MAP = YES
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 233)
LDHAS_LIBCXX := 1
# environment
JOURNAL_STREAM = 8:35370
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 47)
PREFER_OS_CRT = NO
# environment
XDG_SESSION_CLASS = user
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 132)
LDLTO = $(OBJDIR)/lto.src
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 230)
LDHAS_LIBC := 1
# environment
HOME = /home/nick
# environment
QT_IM_MODULE = ibus
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 155)
LTOFILES = $(LINK_CSOURCES) $(LINK_CPPSOURCES)
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-dc656a11-1.68.1-main.sock
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 118)
SRCDIR := src
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 64)
LDPREFER_OS_CRT := 0
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 41)
DEPS = 
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 131)
LDBCLTO = $(OBJDIR)/lto.bc
# default
SUFFIXES := 
# makefile (from 'makefile', line 7)
COMPRESSED = NO
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 33)
LTO = YES
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 48)
PREFER_OS_LIBC = YES
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 240)
EZLLVMFLAGS = -mllvm -profile-guided-section-prefix=false
# makefile (from 'makefile', line 11)
CXXFLAGS = -Wall -Wextra -Oz
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink guile load
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 130)
LDCRT0 = $(call NATIVEPATH,$(CEDEV_TOOLCHAIN)/lib/crt/crt0.src)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 101)
CC = $(call NATIVEPATH,$(BIN)/ez80-clang)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 241)
EZCOMMONFLAGS = -nostdinc -isystem $(call NATIVEPATH,$(CEDEV_TOOLCHAIN)/include) -I$(SRCDIR) -fno-threadsafe-statics -Xclang -fforce-mangle-main-argc-argv $(EZLLVMFLAGS) -D$(DEBUGMODE) $(DEFCUSTOMFILE) $(CCDEBUG)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 96)
NATIVEPATH = $(subst \,/,$1)
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 63)
LDDEBUG := 0
# environment
XDG_MENU_PREFIX = gnome-
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 100)
CEMUTEST = $(call NATIVEPATH,$(BIN)/cemu-autotester)
# environment
GDMSESSION = gnome
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 135)
rwildcard = $(strip $(foreach d,$(wildcard $1/*),$(call rwildcard,$d,$2) $(filter $(subst %%,%,%$(subst *,%,$2)),$d)))
# variable set hash-table stats:
# Load=200/1024=20%, Rehash=0, Collisions=40/566=7%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# /home/nick/CEdev/meta (device 40, inode 8522154): No files, no impossibilities so far.
# src (device 40, inode 8566113): 3 files, no impossibilities.
# . (device 40, inode 8519477): 9 files, no impossibilities.
# /home/nick/CEdev/lib/libload (device 40, inode 8521210): 7 files, no impossibilities.
# src/main.c (device 40, inode 8566114): could not be opened.

# 19 files, no impossibilities in 5 directories.

# Implicit Rules

obj/%.c.src: $(call UPDIR_RM,$*).c  makefile /home/nick/CEdev/meta/makefile.mk
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 310):
	$(Q)$(call MKDIR,$(@D))
	$(Q)echo [compiling] $(call NATIVEPATH,$<)
	$(Q)$(CC) -S -MD $(EZCFLAGS) $(call QUOTE_ARG,$<) -o $(call QUOTE_ARG,$@)

obj/%.cpp.src: $(call UPDIR_RM,$*).cpp  makefile /home/nick/CEdev/meta/makefile.mk
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 315):
	$(Q)$(call MKDIR,$(@D))
	$(Q)echo [compiling] $(call NATIVEPATH,$<)
	$(Q)$(CC) -S -MD $(EZCXXFLAGS) $(call QUOTE_ARG,$<) -o $(call QUOTE_ARG,$@)

obj/%.c.bc: $(call UPDIR_RM,$*).c  makefile /home/nick/CEdev/meta/makefile.mk
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 328):
	$(Q)$(call MKDIR,$(@D))
	$(Q)echo [compiling] $(call NATIVEPATH,$<)
	$(Q)$(CC) -MD -c -emit-llvm $(EZCFLAGS) $(call QUOTE_ARG,$<) -o $(call QUOTE_ARG,$@)

obj/%.cpp.bc: $(call UPDIR_RM,$*).cpp  makefile /home/nick/CEdev/meta/makefile.mk
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 333):
	$(Q)$(call MKDIR,$(@D))
	$(Q)echo [compiling] $(call NATIVEPATH,$<)
	$(Q)$(CC) -MD -c -emit-llvm $(EZCXXFLAGS) $(call QUOTE_ARG,$<) -o $(call QUOTE_ARG,$@)

# 4 implicit rules, 0 (0.0%) terminal.
# Files

# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 271)
debug: DEBUGMODE = DEBUG
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 273)
debug: CCDEBUG = -gdwarf-5 -g3
# makefile (from '/home/nick/CEdev/meta/makefile.mk', line 272)
debug: LDDEBUG = 1
debug: bin/JIM.8xp
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=3/32=9%, Rehash=0, Collisions=0/4=0%

version:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 304):
	$(Q)echo CE C/C++ Toolchain $(shell cedev-config --version)

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 293):
	$(Q)$(EXTRA_CLEAN)
	$(Q)$(call RMDIR,$(OBJDIR) $(BINDIR))
	$(Q)echo Removed built binaries and objects.

obj/lto.bc: obj/src/main.c.bc
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/45=0%
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 324):
	$(Q)echo [lto opt] $(call NATIVEPATH,$@)
	$(Q)$(LINK) $(foreach d,$^,$(call QUOTE_ARG,$(addprefix $(CURDIR)/,$d))) -o $(call QUOTE_ARG,$(addprefix $(CURDIR)/,$@))

# Not a target:
src/main.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-23 11:42:51.853233921
#  File has been updated.
#  Successfully updated.

# Not a target:
/home/nick/CEdev/meta/makefile.mk:
#  Implicit rule search has been done.
#  Last modified 2022-06-03 18:47:30
#  File has been updated.
#  Successfully updated.

# 'override' directive
obj/src/main.c.bc: .SHELLSTATUS := 0
obj/src/main.c.bc: src/main.c makefile /home/nick/CEdev/meta/makefile.mk
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'src/main'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := obj/src/main.c.bc
# automatic
# * := src/main
# automatic
# < := src/main.c
# automatic
# + := src/main.c makefile /home/nick/CEdev/meta/makefile.mk
# automatic
# % := 
# automatic
# ^ := src/main.c makefile /home/nick/CEdev/meta/makefile.mk
# automatic
# ? := src/main.c makefile /home/nick/CEdev/meta/makefile.mk
# automatic
# | := 
# variable set hash-table stats:
# Load=9/32=28%, Rehash=0, Collisions=53/69=77%
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 328):
	$(Q)$(call MKDIR,$(@D))
	$(Q)echo [compiling] $(call NATIVEPATH,$<)
	$(Q)$(CC) -MD -c -emit-llvm $(EZCFLAGS) $(call QUOTE_ARG,$<) -o $(call QUOTE_ARG,$@)

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all: bin/JIM.8xp
 
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/45=0%

# Not a target:
/home/nick/CEdev/lib/crt/crt0.src:
#  Implicit rule search has been done.
#  Last modified 2022-06-03 18:47:29
#  File has been updated.
#  Successfully updated.

test:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 301):
	$(Q)$(CEMUTEST) $(call NATIVEPATH,$(CURDIR)/autotest.json)

bin/JIM.bin: /home/nick/CEdev/lib/crt/crt0.src obj/lto.src obj/icon.src makefile /home/nick/CEdev/meta/makefile.mk
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/45=0%
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 281):
	$(Q)$(call MKDIR,$(@D))
	$(Q)echo [linking] $(call NATIVEPATH,$@)
	$(Q)$(FASMG) $(FASMGFLAGS) $(call NATIVEPATH,$@)

# Not a target:
makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-23 11:42:51.853233921
#  File has been updated.
#  Successfully updated.

.SECONDEXPANSION:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

gfx:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 298):
	$(Q)$(MAKE_GFX)

.PHONY: all clean version gfx debug
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

obj/lto.src: obj/lto.bc
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/45=0%
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 321):
	$(Q)$(CC) -S $(EZLTOFLAGS) $(call QUOTE_ARG,$(addprefix $(CURDIR)/,$<)) -o $(call QUOTE_ARG,$(addprefix $(CURDIR)/,$@))

obj/icon.src: makefile /home/nick/CEdev/meta/makefile.mk
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 287):
	$(Q)$(call MKDIR,$(@D))
	$(Q)echo [convimg] $(or $(ICONIMG),description)
	$(Q)$(ICON_CONV)

bin/JIM.8xp: bin/JIM.bin makefile /home/nick/CEdev/meta/makefile.mk
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/45=0%
#  recipe to execute (from '/home/nick/CEdev/meta/makefile.mk', line 277):
	$(Q)$(call MKDIR,$(@D))
	$(Q)$(CONVBIN) $(CONVBINFLAGS) -i $(call QUOTE_ARG,$(call NATIVEPATH,$<)) -o $(call QUOTE_ARG,$(call NATIVEPATH,$@))

# files hash-table stats:
# Load=20/1024=2%, Rehash=0, Collisions=0/71=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 43 / storage = 500 B / avg = 11 B
# current buf: size = 8162 B / used = 500 B / count = 43 / avg = 11 B

# strcache performance: lookups = 93 / hit rate = 53%
# hash-table stats:
# Load=43/8192=1%, Rehash=0, Collisions=0/93=0%
# Finished Make data base on Fri Jun 24 11:59:56 2022

 
